[{"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\index.js":"1","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\App.js":"2","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\store\\DeviceStore.js":"3","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\store\\UserStore.js":"4","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\AppRouter.js":"5","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\userAPI.js":"6","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\routes.js":"7","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\index.js":"8","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\utils\\consts.js":"9","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\deviceAPI.js":"10","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateDevice.js":"11","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateType.js":"12","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateBrand.js":"13","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\navBar\\NavBar.js":"14","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\typeBar\\TypeBar.js":"15","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\device\\DeviceItem.js":"16","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\device\\DeviceList.js":"17","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\brandBar\\BrandBar.js":"18","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\numberPage\\NumberPage.js":"19","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\devicePage\\DevicePage.js":"20","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Basket\\Basket.js":"21","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Auth\\Auth.js":"22","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Shop\\Shop.js":"23","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Admin\\Admin.js":"24"},{"size":451,"mtime":1661437078036,"results":"25","hashOfConfig":"26"},{"size":882,"mtime":1661501002667,"results":"27","hashOfConfig":"26"},{"size":1440,"mtime":1661332733980,"results":"28","hashOfConfig":"26"},{"size":544,"mtime":1661193773751,"results":"29","hashOfConfig":"26"},{"size":773,"mtime":1661420346010,"results":"30","hashOfConfig":"26"},{"size":695,"mtime":1640348752000,"results":"31","hashOfConfig":"26"},{"size":808,"mtime":1661327333862,"results":"32","hashOfConfig":"26"},{"size":407,"mtime":1640348752000,"results":"33","hashOfConfig":"26"},{"size":228,"mtime":1640348752000,"results":"34","hashOfConfig":"26"},{"size":1359,"mtime":1661330279366,"results":"35","hashOfConfig":"26"},{"size":6193,"mtime":1661194940016,"results":"36","hashOfConfig":"26"},{"size":1365,"mtime":1661504966182,"results":"37","hashOfConfig":"26"},{"size":1368,"mtime":1640348752000,"results":"38","hashOfConfig":"26"},{"size":2462,"mtime":1661500795535,"results":"39","hashOfConfig":"26"},{"size":685,"mtime":1661501186847,"results":"40","hashOfConfig":"26"},{"size":689,"mtime":1661500937779,"results":"41","hashOfConfig":"26"},{"size":565,"mtime":1661500823830,"results":"42","hashOfConfig":"26"},{"size":770,"mtime":1661501096474,"results":"43","hashOfConfig":"26"},{"size":908,"mtime":1661501156552,"results":"44","hashOfConfig":"26"},{"size":2168,"mtime":1661500716528,"results":"45","hashOfConfig":"26"},{"size":1934,"mtime":1661500765224,"results":"46","hashOfConfig":"26"},{"size":3012,"mtime":1661501230745,"results":"47","hashOfConfig":"26"},{"size":1535,"mtime":1661501037412,"results":"48","hashOfConfig":"26"},{"size":1164,"mtime":1661502457942,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"8k6dgm",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\index.js",["106"],"import React, {createContext, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserStore from \"./store/UserStore\";\nimport DeviceStore from \"./store/DeviceStore\";\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={{\n        user: new UserStore(),\n        device: new DeviceStore(),\n    }}>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n//\n",["107","108"],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\App.js",["109"],"import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/navBar/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const { user } = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"} />\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\routes.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\index.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\utils\\consts.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateDevice.js",["110"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        try{\n            formData.append('name', name)\n            formData.append('price', `${price}`)\n            formData.append('img', file)\n            formData.append('brandId', device.selectedBrand.id)\n            formData.append('typeId', device.selectedType.id)\n            formData.append('info', JSON.stringify(info))\n            createDevice(formData).then(data => onHide())\n        } catch(e){\n            alert(e)\n        }\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\modals\\CreateBrand.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\navBar\\NavBar.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\typeBar\\TypeBar.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\device\\DeviceItem.js",["111"],"import React  from 'react';\nimport { useHistory } from \"react-router-dom\"\nimport { DEVICE_ROUTE } from \"../../utils/consts\";\n\nimport './deviceItem.scss'\n\nconst DeviceItem = ({ device }) => {\n    const history = useHistory()\n    \n    return (\n        <div className='device-item'\n            onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\n            <div className='device-item__img'>\n                <img src={process.env.REACT_APP_API_URL + device.img} />\n            </div>\n            <div className='device-item__name'>{device.name}</div>\n            <div className=\"device-item__price\">{device.price} руб</div>\n        </div>\n\n    );\n};\n\nexport default DeviceItem;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\device\\DeviceList.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\brandBar\\BrandBar.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\components\\numberPage\\NumberPage.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\devicePage\\DevicePage.js",["112","113"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { addToBasket, fetchOneDevice } from \"../../http/deviceAPI\";\n\nimport './devicePage.scss'\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({ info: [] })\n    const { id } = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    const add = () => {\n        const formData = new FormData()\n        formData.append('deviceId', id)\n        addToBasket(formData).then(response => alert(`Товар ` + device.name + ` был добавлен в вашу корзину!`))\n    }\n\n    return (\n        <div className=\"container\">\n            <div className='row'>\n                <div className='col-md-6 device-page__img'>\n                    <img src={process.env.REACT_APP_API_URL + device.img} />\n                </div>\n                <div className='col-md-6 device-page__descr'>\n\n                    <div className=\"device-page__descr__title\">\n                        <h1>{device.name}</h1>\n                    </div>\n\n                    <div className=\"device-page__descr__price\">\n                        <span>{device.price} руб</span>\n                    </div>\n                    <div className='device-page__descr__btn'>\n                        <button onClick={add} >В корзину</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"d-flex flex-column row\">\n                <div className='device-page__info-title'>\n                    <span>Характеристики</span>\n                </div>\n\n                {device.info.map((info, index) =>\n                    <div className='device-page__info' key={info.id}>\n                        <div className='device-page__info__title'>\n                            {info.title}\n                        </div>\n                        <div className='device-page__info__descr'>\n                            {info.description}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default DevicePage;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Basket\\Basket.js",["114","115","116"],"import React, { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '../..';\nimport { getBasket } from '../../http/deviceAPI';\nimport { observer } from 'mobx-react-lite';\n\nimport './basket.scss'\n\nconst Basket = observer(() => {\n    const { device } = useContext(Context)\n\n    useEffect(() => {\n        getBasket().then(data => device.setBaskets(data))\n    }, [])\n\n    let prices = 0;\n    device.basket.map(price =>\n        prices += Number(price.device.price)\n    )\n\n    let arr = []\n    device.basket.map(product => {\n        arr.push(product.device.name)\n    })\n\n    return (\n        <div className=\"container basket flex-sm-column mt-3\">\n            <h1 className=\"basket__title\">Корзина</h1>\n\n            {device.basket.map(product =>\n                <div className=\"basket__area-items\" key={product.id}>\n                    <div className=\"basket__area-items__name\">\n                        <img src={process.env.REACT_APP_API_URL + product.device.img} />\n                        <span>{product.device.name}</span>\n                    </div>\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"font-weight-light\">{product.device.price} руб/шт</span>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"basket-total col align-self-end\">\n                <div>\n                    <span className=\"basket-total__title\">Товары ({arr.length})</span>\n                    <span className=\"basket-total__title\">{prices} руб</span>\n                </div>\n                <div>\n                    <span className=\"basket-total__title\">Итого:</span>\n                    <span className=\"basket-total__price\">{prices} руб</span>\n                </div>\n                <button>Оформить заказ</button>\n            </div>\n        </div>\n    );\n});\n\nexport default Basket;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Auth\\Auth.js",[],"C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Shop\\Shop.js",["117","118"],"import React, { useContext, useEffect } from 'react';\nimport TypeBar from \"../../components/typeBar/TypeBar\";\nimport BrandBar from \"../../components/brandBar/BrandBar\";\nimport DeviceList from \"../../components/device/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\nimport NumberPage from \"../../components/numberPage/NumberPage\";\n\nconst Shop = observer(() => {\n    const { device } = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 8).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.selectedType, device.selectedBrand, device.page])\n\n\n    return (\n        <div className='container'>\n            <div className=\"row\">\n                <div className='col-md-3'>\n                    <TypeBar />\n                </div>\n                <div className='col-md-9'>\n                    <BrandBar />\n                    <DeviceList/>\n                    <NumberPage />\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Shop;\n","C:\\Users\\Evgen\\Desktop\\online_store\\client\\src\\pages\\Admin\\Admin.js",[],{"ruleId":"119","severity":1,"message":"120","line":1,"column":31,"nodeType":"121","messageId":"122","endLine":1,"endColumn":39},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":19,"column":8,"nodeType":"129","endLine":19,"endColumn":10,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":18,"column":8,"nodeType":"129","endLine":18,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":14,"column":17,"nodeType":"135","endLine":14,"endColumn":73},{"ruleId":"127","severity":1,"message":"136","line":12,"column":8,"nodeType":"129","endLine":12,"endColumn":10,"suggestions":"137"},{"ruleId":"133","severity":1,"message":"134","line":24,"column":21,"nodeType":"135","endLine":24,"endColumn":77},{"ruleId":"127","severity":1,"message":"131","line":14,"column":8,"nodeType":"129","endLine":14,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":22,"column":31,"nodeType":"141","messageId":"142","endLine":22,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":33,"column":25,"nodeType":"135","endLine":33,"endColumn":89},{"ruleId":"127","severity":1,"message":"131","line":20,"column":8,"nodeType":"129","endLine":20,"endColumn":10,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"131","line":27,"column":8,"nodeType":"129","endLine":27,"endColumn":64,"suggestions":"144"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["149"],["150"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["151"],["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"155","fix":"159"},{"desc":"155","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [user]",{"range":"163","text":"164"},"Update the dependencies array to be: [device]",{"range":"165","text":"166"},"Update the dependencies array to be: [id]",{"range":"167","text":"168"},{"range":"169","text":"166"},{"range":"170","text":"166"},"Update the dependencies array to be: [device.selectedType, device.selectedBrand, device.page, device]",{"range":"171","text":"172"},[662,664],"[user]",[733,735],"[device]",[394,396],"[id]",[393,395],[827,829],[1059,1115],"[device.selectedType, device.selectedBrand, device.page, device]"]