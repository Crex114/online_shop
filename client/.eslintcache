[{"D:\\Courses\\JS+React\\online_store\\client\\src\\index.js":"1","D:\\Courses\\JS+React\\online_store\\client\\src\\App.js":"2","D:\\Courses\\JS+React\\online_store\\client\\src\\store\\DeviceStore.js":"3","D:\\Courses\\JS+React\\online_store\\client\\src\\store\\UserStore.js":"4","D:\\Courses\\JS+React\\online_store\\client\\src\\http\\userAPI.js":"5","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\AppRouter.js":"6","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\navBar\\NavBar.js":"7","D:\\Courses\\JS+React\\online_store\\client\\src\\http\\index.js":"8","D:\\Courses\\JS+React\\online_store\\client\\src\\routes.js":"9","D:\\Courses\\JS+React\\online_store\\client\\src\\utils\\consts.js":"10","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\devicePage\\DevicePage.js":"11","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Auth\\Auth.js":"12","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Shop\\Shop.js":"13","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Admin\\Admin.js":"14","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Basket\\Basket.js":"15","D:\\Courses\\JS+React\\online_store\\client\\src\\http\\deviceAPI.js":"16","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\numberPage\\NumberPage.js":"17","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\device\\DeviceList.js":"18","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\brandBar\\BrandBar.js":"19","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\typeBar\\TypeBar.js":"20","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateType.js":"21","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateBrand.js":"22","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateDevice.js":"23","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\device\\DeviceItem.js":"24","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\allDevices\\AllDevices.js":"25"},{"size":451,"mtime":1661437078036,"results":"26","hashOfConfig":"27"},{"size":1124,"mtime":1661587527059,"results":"28","hashOfConfig":"27"},{"size":1512,"mtime":1663083404468,"results":"29","hashOfConfig":"27"},{"size":574,"mtime":1663083404469,"results":"30","hashOfConfig":"27"},{"size":715,"mtime":1663083404464,"results":"31","hashOfConfig":"27"},{"size":797,"mtime":1663083404455,"results":"32","hashOfConfig":"27"},{"size":2744,"mtime":1663083404460,"results":"33","hashOfConfig":"27"},{"size":428,"mtime":1663083404463,"results":"34","hashOfConfig":"27"},{"size":808,"mtime":1661327333862,"results":"35","hashOfConfig":"27"},{"size":370,"mtime":1661674668163,"results":"36","hashOfConfig":"27"},{"size":2227,"mtime":1663083404468,"results":"37","hashOfConfig":"27"},{"size":3093,"mtime":1663083404465,"results":"38","hashOfConfig":"27"},{"size":1724,"mtime":1663083404467,"results":"39","hashOfConfig":"27"},{"size":1191,"mtime":1663083404465,"results":"40","hashOfConfig":"27"},{"size":1991,"mtime":1663083404466,"results":"41","hashOfConfig":"27"},{"size":1409,"mtime":1663083404462,"results":"42","hashOfConfig":"27"},{"size":924,"mtime":1663083404461,"results":"43","hashOfConfig":"27"},{"size":921,"mtime":1663083404457,"results":"44","hashOfConfig":"27"},{"size":849,"mtime":1663083404456,"results":"45","hashOfConfig":"27"},{"size":854,"mtime":1663083404462,"results":"46","hashOfConfig":"27"},{"size":1409,"mtime":1663083404459,"results":"47","hashOfConfig":"27"},{"size":1411,"mtime":1663083404458,"results":"48","hashOfConfig":"27"},{"size":6342,"mtime":1663083404459,"results":"49","hashOfConfig":"27"},{"size":730,"mtime":1663083404456,"results":"50","hashOfConfig":"27"},{"size":365,"mtime":1663083404455,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"16ypnja",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Courses\\JS+React\\online_store\\client\\src\\index.js",["108"],"import React, {createContext, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserStore from \"./store/UserStore\";\nimport DeviceStore from \"./store/DeviceStore\";\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={{\n        user: new UserStore(),\n        device: new DeviceStore(),\n    }}>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n//\n","D:\\Courses\\JS+React\\online_store\\client\\src\\App.js",["109"],"import React, { useContext, useEffect, useState, createContext } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/navBar/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport const ContextFilteredDevices = createContext()\n\nconst App = observer(() => {\n    const { user } = useContext(Context)\n    const [loading, setLoading] = useState(true)\n    const [value, setValue] = useState('')\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"} />\n    }\n\n    return (\n        <BrowserRouter>\n            <ContextFilteredDevices.Provider value={{ value, setValue }}>\n                <NavBar />\n                <AppRouter />\n            </ContextFilteredDevices.Provider>\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\Courses\\JS+React\\online_store\\client\\src\\store\\DeviceStore.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\store\\UserStore.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\http\\userAPI.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\AppRouter.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\navBar\\NavBar.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\http\\index.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\routes.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\utils\\consts.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\devicePage\\DevicePage.js",["110","111"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { addToBasket, fetchOneDevice } from \"../../http/deviceAPI\";\r\n\r\nimport './devicePage.scss'\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({ info: [] })\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    const add = () => {\r\n        const formData = new FormData()\r\n        formData.append('deviceId', id)\r\n        addToBasket(formData).then(response => alert(`Товар ` + device.name + ` был добавлен в вашу корзину!`))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='row'>\r\n                <div className='col-md-6 device-page__img'>\r\n                    <img src={process.env.REACT_APP_API_URL + device.img} />\r\n                </div>\r\n                <div className='col-md-6 device-page__descr'>\r\n\r\n                    <div className=\"device-page__descr__title\">\r\n                        <h1>{device.name}</h1>\r\n                    </div>\r\n\r\n                    <div className=\"device-page__descr__price\">\r\n                        <span>{device.price} руб</span>\r\n                    </div>\r\n                    <div className='device-page__descr__btn'>\r\n                        <button onClick={add} >В корзину</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column row\">\r\n                <div className='device-page__info-title'>\r\n                    <span>Характеристики</span>\r\n                </div>\r\n\r\n                {device.info.map((info, index) =>\r\n                    <div className='device-page__info' key={info.id}>\r\n                        <div className='device-page__info__title'>\r\n                            {info.title}\r\n                        </div>\r\n                        <div className='device-page__info__descr'>\r\n                            {info.description}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DevicePage;\r\n","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Auth\\Auth.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Shop\\Shop.js",["112","113"],"import React, { useContext, useEffect } from 'react';\r\nimport TypeBar from \"../../components/typeBar/TypeBar\";\r\nimport BrandBar from \"../../components/brandBar/BrandBar\";\r\nimport DeviceList from \"../../components/device/DeviceList\";\r\nimport AllDevices from '../../components/allDevices/AllDevices';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\r\nimport NumberPage from \"../../components/numberPage/NumberPage\";\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context)\r\n\r\n    const fetch = () => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 8).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }\r\n\r\n    useEffect(fetch, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.selectedType, device.selectedBrand, device.page])\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row\">\r\n                <div className='col-md-3'>\r\n                    <AllDevices reload={fetch}/>\r\n                    <TypeBar />\r\n                </div>\r\n                <div className='col-md-9'>\r\n                    <BrandBar />\r\n                    <DeviceList/>\r\n                    <NumberPage />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Admin\\Admin.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\pages\\Basket\\Basket.js",["114","115","116"],"import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../..';\r\nimport { getBasket } from '../../http/deviceAPI';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport './basket.scss'\r\n\r\nconst Basket = observer(() => {\r\n    const { device } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        getBasket().then(data => device.setBaskets(data))\r\n    }, [])\r\n\r\n    let prices = 0;\r\n    device.basket.map(price =>\r\n        prices += Number(price.device.price)\r\n    )\r\n\r\n    let arr = []\r\n    device.basket.map(product => {\r\n        arr.push(product.device.name)\r\n    })\r\n\r\n    return (\r\n        <div className=\"container basket flex-sm-column mt-3\">\r\n            <h1 className=\"basket__title\">Корзина</h1>\r\n\r\n            {device.basket.map(product =>\r\n                <div className=\"basket__area-items\" key={product.id}>\r\n                    <div className=\"basket__area-items__name\">\r\n                        <img src={process.env.REACT_APP_API_URL + product.device.img} />\r\n                        <span>{product.device.name}</span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span className=\"font-weight-light\">{product.device.price} руб/шт</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"basket-total col align-self-end\">\r\n                <div>\r\n                    <span className=\"basket-total__title\">Товары ({arr.length})</span>\r\n                    <span className=\"basket-total__title\">{prices} руб</span>\r\n                </div>\r\n                <div>\r\n                    <span className=\"basket-total__title\">Итого:</span>\r\n                    <span className=\"basket-total__price\">{prices} руб</span>\r\n                </div>\r\n                <button>Оформить заказ</button>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Basket;\r\n","D:\\Courses\\JS+React\\online_store\\client\\src\\http\\deviceAPI.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\numberPage\\NumberPage.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\device\\DeviceList.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\brandBar\\BrandBar.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\typeBar\\TypeBar.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateType.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateBrand.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\modals\\CreateDevice.js",["117"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        try{\r\n            formData.append('name', name)\r\n            formData.append('price', `${price}`)\r\n            formData.append('img', file)\r\n            formData.append('brandId', device.selectedBrand.id)\r\n            formData.append('typeId', device.selectedType.id)\r\n            formData.append('info', JSON.stringify(info))\r\n            createDevice(formData).then(data => onHide())\r\n        } catch(e){\r\n            alert(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","D:\\Courses\\JS+React\\online_store\\client\\src\\components\\device\\DeviceItem.js",[],"D:\\Courses\\JS+React\\online_store\\client\\src\\components\\allDevices\\AllDevices.js",[],{"ruleId":"118","severity":1,"message":"119","line":1,"column":31,"nodeType":"120","messageId":"121","endLine":1,"endColumn":39},{"ruleId":"122","severity":1,"message":"123","line":22,"column":8,"nodeType":"124","endLine":22,"endColumn":10,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":12,"column":8,"nodeType":"124","endLine":12,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":24,"column":21,"nodeType":"130","endLine":24,"endColumn":77},{"ruleId":"122","severity":1,"message":"131","line":23,"column":22,"nodeType":"124","endLine":23,"endColumn":24,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"131","line":30,"column":8,"nodeType":"124","endLine":30,"endColumn":64,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"131","line":14,"column":8,"nodeType":"124","endLine":14,"endColumn":10,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":31,"nodeType":"137","messageId":"138","endLine":22,"endColumn":33},{"ruleId":"128","severity":1,"message":"129","line":33,"column":25,"nodeType":"130","endLine":33,"endColumn":89},{"ruleId":"122","severity":1,"message":"131","line":18,"column":8,"nodeType":"124","endLine":18,"endColumn":10,"suggestions":"139"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["142"],["143"],["144"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["145"],{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"150","fix":"154"},{"desc":"150","fix":"155"},"Update the dependencies array to be: [user]",{"range":"156","text":"157"},"Update the dependencies array to be: [id]",{"range":"158","text":"159"},"Update the dependencies array to be: [device]",{"range":"160","text":"161"},"Update the dependencies array to be: [device.selectedType, device.selectedBrand, device.page, device]",{"range":"162","text":"163"},{"range":"164","text":"161"},{"range":"165","text":"161"},[775,777],"[user]",[405,407],"[id]",[939,941],"[device]",[1178,1234],"[device.selectedType, device.selectedBrand, device.page, device]",[406,408],[750,752]]